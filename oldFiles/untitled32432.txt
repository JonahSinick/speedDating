addDecs = function(wave){
	for(gender in c("X", "Y")){
		str = paste("Rater", gender, sep="")
		other_str = paste("Ratee", gender, sep="")
		decType = ifelse(gender=="X", "dec.x", "dec.y")
		otherDecType = ifelse(gender=="X", "dec.y", "dec.x")
		ids = ifelse(gender=="X", unique(wave[["id.x"]]), unique(wave[["id.y"]]))
		idType = ifelse(gender=="X", "id.x", "id.y")
		for(i in ids){
			strung = paste(str,toString(i))
			strung2 = paste(other_str,toString(i))
			wave[strung] = 0
			wave[strung2] = 0
			slice_i = wave[wave[idType] == i,]
			for(j in ids){
				if(i == j){
					wave[wave[idType] == j,][[strung]] = 0
					wave[wave[partnerType] == j,][[strung2]] = 0
				}
				else{
					wave[wave[idType] == j,][[strung]] = slice_i[[decType]]
					wave[wave[idType] == j,][[strung2]] = slice_i[[otherDecType]]
				}
			}
			wave[strung3] = 1 - wave[strung]
			wave[strung4] = 1 - wave[strung2]			
		}			
	}
	for(gender in c("X", "Y")){
		otherGender = ifelse(gender=="X", "Y", "X")
		decType = ifelse(gender=="X", "dec.x", "dec.y")
		otherDecType = ifelse(gender=="X", "dec.y", "dec.x")
		ids = ifelse(gender=="X", unique(wave[["id.x"]]), unique(wave[["id.y"]]))
		partners = ifelse(gender=="X", unique(wave[["id.y"]]), unique(wave[["id.x"]]))
		idType = ifelse(gender=="X", "id.x", "id.y")
		partnerType = ifelse(gender=="X", "partner.x", "partner.y")
		for(i in ids){
			rater = paste("rater", paste(gender,toString(i),sep=""), sep="")
			ratee = paste("ratee", paste(otherGender,toString(i),sep=""), sep="")
			rater_cor = paste("raterCor", paste(gender,toString(i),sep=""), sep="")
			rater_sq_cor = paste("raterSqCor", paste(gender,toString(i),sep=""), sep="")
			ratee_cor = paste("rateeCor", paste(otherGender,toString(i),sep=""), sep="")
			ratee_sq_cor = paste("rateeSqCor", paste(otherGender,toString(i),sep=""), sep="")
			rater_prob_estimate = paste("raterProbEst", paste(gender,toString(i),sep=""), sep="")			
			ratee_prob_estimate = paste("rateeProbEst", paste(otherGender,toString(i),sep=""), sep="")
			wave[rater_cor] = 0
			wave[rater_sq_cor] = 0			
			wave[ratee_cor] = 0
			wave[ratee_sq_cor] = 0			
			for(j in ids){
				slice_j = wave[wave[idType] == j,]
				for(p in partners){
					p_slice_j = slice_j[slice_j[partnerType] !=p,]
					c = cor(p_slice_j[decType], p_slice_j[rater])
          c = ifelse(is.na(c), 0, c)
          num = ifelse(c >= 0, c*c, -c*c)
					wave[wave[idType] == j,][[rater_cor]] = c*ifelse(p_slice_j[rater] == 1, 1, -1)
					wave[wave[idType] == j,][[rater_sq_cor]] = num*ifelse(p_slice_j[rater] == 1, 1, -1)					
				}
				agrees = ifelse(slice_j[decType] == slice_j[rater], 1, 0)
				agrees = sum(agrees) - agrees
				wave[wave[idType] == j,][[rater_prob_estimate]] = agrees/(length(ids) - 1)
			}
			for(p in partners){
				slice_p = wave[wave[partnerType] == p,]
				for(j in ids){
					j_slice_p = slice_j[slice_j[idType] !=j,]
					c = cor(j_slice_p[decType], j_slice_p[ratee])
	        c = ifelse(is.na(c), 0, c)
	        num = ifelse(c >= 0, c*c, -c*c)
					wave[wave[idType] == j,][[ratee_cor]] = c*ifelse(p_slice_j[ratee] == 1, 1, -1)
					wave[wave[idType] == j,][[ratee_sq_cor]] = num*ifelse(p_slice_j[ratee] == 1, 1, -1)					
				}
				agrees = ifelse(slice_j[decType] == slice_j[ratee], 1, 0)
				agrees = sum(agrees) - agrees
				wave[wave[idType] == j,][[ratee_prob_estimate]] = agrees/(length(ids) - 1)
				
			}
		}
	  n = names(wave)
	  wave[paste("finalProb",rater,sep="")] = 1
	  wave[paste("finalProb",ratee,sep="")] = 1
	  rater_probs = n[grep("raterProbEst.", n)]
	  ratee_probs = n[grep("rateeProbEst.", n)]
		for(p in c(rater_probs,ratee_probs)){
			wave[p] = ifelse(wave[p] == 0, 0.01, wave[p])
			wave[p] = ifelse(wave[p] == 1, 0.99, wave[p])
		}
		for(p in rater_probs){
			wave[paste("finalProb",rater,sep="")] = wave[paste("finalProb",rater,sep="")]*oddsRatio(p)
		}
		for(p in ratee_probs){
			wave[paste("finalProb",ratee,sep="")] = wave[paste("finalProb",ratee,sep="")]*oddsRatio(p)
		}
		wave[paste("finalProb",rater,sep="")] = inverseOddsRatio(wave[paste("finalProb",rater,sep="")])^(1/(length(ids) - 1))
		wave[paste("finalProb",ratee,sep="")] = inverseOddsRatio(wave[paste("finalProb",ratee,sep="")])^(1/(length(ids) - 1))		
	}
}
  for(j in otherIDs){
    slice_j = wave[wave[otherID] == j,]
    for(k in deciderIDs){
      if(k == j){
        wave[wave[deciderID] == k,][[paste("prob",toString(j),sep="_")]] = 0.5
        wave[wave[deciderID] == k,][[paste("betterProb",toString(j),sep="_")]] = 0.5
      }
      else{
        slice_k = wave[wave[deciderID] == k,]
        both_yes = slice_k[[paste("X",toString(k),sep="_")]]*slice_j[[paste("X",toString(j),sep="_")]]
        both_yes = sum(both_yes) - both_yes
        other_yes = sum(other_yes) - other_yes        
        
        wave[wave["id.x"] == k,][[paste("betterProb",toString(j),sep="_")]] = c(ifelse(slice_j[paste("AnswerX",toString(j),sep="_")] == 1, agree_sequence, 1 - agree_sequence))
        
  
}